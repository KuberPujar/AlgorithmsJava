package bitmanipulation.hashing;

import java.util.HashSet;
import java.util.Set;

/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
 */
public class FindDifference {

    public char findTheDifference(String s, String t) {
        int xor = 0;
        for (char c : s.toCharArray()) {
            xor ^= c;
        }
        for (char c : t.toCharArray()) {
            xor ^= c;
        }
        // Optional: HashSet to verify correctness (not strictly needed for this problem)
        Set<Character> set = new HashSet<>();
        for (char c : s.toCharArray()) set.add(c);
        int count = 0;
        for (char c : t.toCharArray()) if (!set.contains(c)) count++;
        if (count > 1) throw new IllegalArgumentException("Invalid input: more than one extra character");
        return (char) xor;
    }

    public static void main(String[] args) {
        FindDifference solution = new FindDifference();
        String s1 = "abcd";
        String t1 = "abcde";
        System.out.println(solution.findTheDifference(s1, t1)); // Output: 'e'

        String s2 = "";
        String t2 = "y";
        System.out.println(solution.findTheDifference(s2, t2)); // Output: 'y'
    }
}
